// Code generated by wunderctl. DO NOT EDIT.

export interface AddMessageInput {
	message: string;
}

export interface AllUsersInput {
	email: string;
}

export interface ChangeUserNameInput {
	newName: string;
}

export interface DeleteAllMessagesByUserEmailInput {
	email: string;
}

export interface SetLastLoginInput {
	email: string;
}

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}

export interface AddMessageResponse {
	data?: {
		createOnemessages?: {
			id: number;
			message: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface AllUsersResponse {
	data?: {
		findManyusers: {
			id: number;
			email: string;
			name: string;
			messages?: {
				id: number;
				message: string;
			}[];
		}[];
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ChangeUserNameResponse {
	data?: {
		updateOneusers?: {
			id: number;
			email: string;
			name: string;
			updatedat: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface DeleteAllMessagesByUserEmailResponse {
	data?: {
		deleteManymessages?: {
			count: number;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface MessagesResponse {
	data?: {
		findManymessages: {
			id: number;
			message: string;
			users: {
				id: number;
				name: string;
				email: string;
			};
		}[];
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface MockQueryResponse {
	data?: {
		findFirstusers?: {
			id: number;
			email: string;
			name: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface SetLastLoginResponse {
	data?: {
		updateOneusers?: {
			id: number;
			lastlogin: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UserInfoResponse {
	data?: {
		findFirstusers?: {
			id: number;
			email: string;
			name: string;
			lastlogin: string;
		};
	};
	errors?: ReadonlyArray<GraphQLError>;
}
